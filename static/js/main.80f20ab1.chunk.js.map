{"version":3,"sources":["Search.js","Game.js","App.js","serviceWorker.js","index.js","Calculator.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","txt","Result","bind","assertThisInitialized","Seek","state","val","evt","target","value","setState","i","res","key","toLocaleUpperCase","length","indexOf","push","map","word","react_default","a","createElement","className","onKeyUp","type","React","Component","Game","App","src_Search","Calculator","src_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Calc","D_Proj_Calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Proj_Calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Proj_Calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","nums","operator","temp","func","D_Proj_Calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","result","clear","wrapper","no","pop","tst","toString","replace","mine","eval","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","number","onClick","oper"],"mappings":"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","file":"static/js/main.80f20ab1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.Result=this.Result.bind(this);\r\n        this.Seek=this.Seek.bind(this);\r\n        this.state ={\r\n          val : \"\"\r\n        }\r\n    }\r\n    txt=['HTML','CSS','CSS3','NodeJS','PHP','JQUERY','JAVASCRIPT','BOOTSTRAP','REACTJS'];\r\n    \r\n    Seek(evt){\r\n      let val=evt.target.value;\r\n      this.setState({\r\n          val : val\r\n      })\r\n    }\r\n\r\n    Result(){\r\n            \r\n            let res=[];\r\n            let key=this.state.val.toLocaleUpperCase();\r\n            let i;\r\n            \r\n            if(key != ''){\r\n            for(i=0;i<this.txt.length;i++){\r\n                let me=this.txt[i].toLocaleUpperCase().indexOf(key);\r\n                if( me > -1){\r\n                    res.push(this.txt[i]);\r\n                }\r\n                }\r\n               if(res.length>0){ \r\n               return( res.map((word)=>(<li>{word}</li>)))\r\n                }\r\n                else{\r\n                  return(  <li>No match found</li>)\r\n                }\r\n                \r\n            \r\n          }\r\n          \r\n       \r\n           \r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n              Search your target here :  <input className=\"srch\" onKeyUp={this.Seek}  type=\"text\"/>  \r\n              \r\n              {this.Result()}\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nclass Game extends React.Component{\r\n   constructor(props){\r\n       super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react';\n\nimport Search from './Search';\nimport Calc from './Calculator';\nimport Game from './Game'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n          <Search />\n          <br/>\n          <p>Here is a Calculator Created totally with RactJS</p>\n          <Calc />\n          <Game />\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Calc extends  React.Component{\r\n constructor(props){\r\n     super(props);\r\n     this.func=this.func.bind(this);\r\n     this.result=this.result.bind(this);\r\n     this.clear = this.clear.bind(this);\r\n     this.state ={\r\n         wrapper : [],\r\n         no : []\r\n     }\r\n\r\n }\r\n nums=['1','2','3','4','5','6','7','8','9','0'];\r\n operator=['+','-','*','/'];\r\n temp=[];\r\n func(evt){\r\n         if(evt.target.className == 'ops'){\r\n             if(this.operator.indexOf(this.state.wrapper[this.state.wrapper.length-1])>-1){\r\n                this.state.wrapper.pop([this.state.wrapper.length-1])\r\n             }\r\n         }\r\n         this.temp.push(evt.target.value);\r\n         this.setState({\r\n            wrapper : this.temp\r\n        })\r\n }\r\n result(){\r\n    if(this.operator.indexOf(this.state.wrapper[this.state.wrapper.length-1])>-1){\r\n        this.state.wrapper.pop([this.state.wrapper.length-1])\r\n     }\r\n    let tst=this.state.wrapper.toString().replace(/,/g,'');\r\n    let mine=eval(tst)\r\n    \r\n    this.setState({\r\n        wrapper : mine\r\n    })\r\n }\r\n\r\n clear(){\r\n    this.temp=[]; \r\n    this.setState({\r\n        wrapper : this.temp\r\n    })\r\n }\r\n\r\n render(){\r\n     return(\r\n        <div className=\"calwrapper\">\r\n         <div className=\"result\">{this.state.wrapper}</div>\r\n         <div className=\"numwrapper\">\r\n          {this.nums.map((number)=>(<input className=\"nums\" value={number} type=\"submit\"  onClick={this.func}/>))}\r\n         </div>\r\n         <div className=\"opswrapper\">\r\n           {this.operator.map((oper)=>(<input className=\"ops\" value={oper} type=\"submit\" onClick={this.func}/>))}\r\n         </div>\r\n         <input type=\"submit\" value=\"Result\" onClick={this.result}/>\r\n         <input type=\"submit\" value=\"Clear\" onClick={this.clear}/>\r\n        </div>\r\n     )\r\n }\r\n}\r\nexport default Calc;"],"sourceRoot":""}